import React from 'react';
import {useState} from 'react';


function Service (){
const [isButtonClicked, setIsButtonClicked] = useState(false);

let handlerButtonClicked = () => {
    setIsButtonClicked(true);
}

    return (
    
        <div className="service">
        <h1>Дополнительные услуги и сервис</h1>
        <h3>Цветопрофилирование</h3>
        <p>Настройка технологического процесса вывода цвета – построение профиля принтера (или цветопрофилирование) на оборудовании для широкоформатной печати на сольвентных и УФ-принтерах.</p>
        <button onClick={handlerButtonClicked}>Подробнее</button>
        {isButtonClicked && <MoreService/>}
        </div>
        
    )
    }
    
    export default Service;

    function MoreService(){
        return(
            <div>
                <h3>В этот процесс входит:</h3>
                <ul>
                    <li>Диагностика проблем и настройка рабочих режимов печати принтера.</li>
                    <li>Настройка RIPa.</li>
                    <li>Построение профиля принтера и подбор рабочих режимов печати.</li>
                    <li>Настройка и калибровка (профилирование) мониторов.</li>
                    <li> Настройка рабочих программ дизайнера (фирмы Adobe).</li>
                    <li>Окончательное тестирование всей технологической цепочки от приема макета до подготовки печатной продукции.</li>
                    
                </ul>

                <h4>Диагностика</h4>
                <p>Начальный этап, который выявляет возможные проблемы печати и помогает понять способы решения, подобрать рабочие режимы и материалы, способные в комплексе соответствовать эталонным стандартам печати. В нашем случае (речь про построение цветового профиля широкоформатного УФ-принтера) это стандарты SWOP и GRACoL. В системных настройках различных РИПов (ColorGATE, ONYX, Photoprint, Colorprint, Wasatch и др.) как правило уже входит «родной» алгоритм настройки рабочего режима печати и внутренняя программа, позволяющая производить построение профиля принтера.</p>
            </div>
        )
    }